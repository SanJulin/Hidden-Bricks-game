var u=Object.defineProperty;var d=(i,e,t)=>e in i?u(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var o=(i,e,t)=>d(i,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class l{constructor(e,t,r){o(this,"id",0);o(this,"name","");o(this,"color","");o(this,"image");this.id=e,this.name=t,r&&this.setImage(r)}getName(){return this.name}getId(){return this.id}getColor(){return this.color}setColor(e){if(e==="green"||e==="yellow"||e==="red")this.color=e;else throw new Error("Only green, yellow and red are valid colors")}getImage(){if(this.image)return this.image}setImage(e){const t=document.createElement("img");t.setAttribute("src",e),t.setAttribute("alt",this.name),this.image=t}}class g{constructor(e,t){o(this,"numberOfBricks",5);o(this,"theme");o(this,"optionArray",[]);o(this,"playerGuessRow");o(this,"optionRow");this.numberOfBricks=e,this.theme=t,this.optionArray=this.theme.getItemArray(),this.playerGuessRow=document.getElementById("player-guess-row"),this.optionRow=document.getElementById("option-row"),this.dragstartHandler=this.dragstartHandler.bind(this),this.dragoverHandler=this.dragoverHandler.bind(this),this.dropHandler=this.dropHandler.bind(this),this.createGameBoard()}createGameBoard(){this.createPlayerGuessRow(),this.createOptionRow(),this.createClearAllButton(),this.createClearWrongButton()}createPlayerGuessRow(){for(let e=0;e<this.numberOfBricks;e++){const t=document.createElement("div");t.className="guess",t.id=`guess${e+1}`,t.addEventListener("dragover",this.dragoverHandler),t.addEventListener("drop",this.dropHandler),this.playerGuessRow.appendChild(t)}}createOptionRow(){for(let e=0;e<this.optionArray.length;e++){const t=document.createElement("div");t.className="option",t.id=`option${this.optionArray[e].getId()}`,t.textContent=this.optionArray[e].getName();const r=this.optionArray[e].getImage();r&&t.appendChild(r),t.setAttribute("draggable","true"),t.addEventListener("dragstart",this.dragstartHandler),this.optionRow.appendChild(t)}}createClearAllButton(){const e=document.createElement("button");e.textContent="clear all",e.addEventListener("click",t=>{t.preventDefault(),this.clearGuesses("all")}),this.playerGuessRow.appendChild(e)}createClearWrongButton(){const e=document.createElement("button");e.textContent="clear wrong guesses",e.addEventListener("click",t=>{t.preventDefault(),this.clearGuesses("wrong")}),this.playerGuessRow.appendChild(e)}updatePlayerGuessBrick(e,t){const r=t;e.appendChild(r)}dragstartHandler(e){var t;e.target instanceof HTMLElement&&((t=e.dataTransfer)==null||t.setData("text/plain",e.target.id))}dragoverHandler(e){e.preventDefault(),e.dataTransfer.dropEffect="copy"}dropHandler(e){e.preventDefault();const t=e.dataTransfer.getData("text/plain"),r=document.getElementById(t),s=r==null?void 0:r.cloneNode(!0);s&&e.target instanceof HTMLElement&&e.target.children.length===0&&e.target.appendChild(s)}clearGuesses(e){for(let t=0;t<this.playerGuessRow.children.length;t++){const r=this.playerGuessRow.children[t],s=this.playerGuessRow.children[t].firstElementChild;s&&(e==="wrong"&&r.style.borderColor!=="green"||e==="all")&&(r.removeChild(s),r.style.border="3px solid black")}}getPlayerAnswer(){var t;let e=[];for(let r=0;r<this.numberOfBricks;r++){const s=(t=this.playerGuessRow.children[r].firstElementChild)==null?void 0:t.textContent;if(s!==void 0){const n=new l(r,s);e.push(n)}}return e}updateBorderColors(e,t){const r=this.playerGuessRow.children[e];r.style.border="10px solid "+t}}class c{constructor(e){o(this,"theme","");o(this,"themeArray",[]);o(this,"itemArray",[]);o(this,"availableThemes",["flags","animals","colors","professions","movies"]);e?this.setTheme(e):this.theme=""}getTheme(){if(this.theme)throw new Error("No theme has been set for the game");return this.theme}setTheme(e){this.theme=e,this.theme&&this.setThemeArray()}getAvailableThemes(){return this.availableThemes}getItemArray(){try{return this.itemArray}catch(e){return console.log(e),[]}}getThemeArray(){try{return this.themeArray}catch(e){return console.log(e),[]}}setOtherTheme(e,t){if(t.length!==8)throw Error("The themeArray must contain 8 items.");if(e==="")throw Error('Pls provide a theme "name" for the game');this.theme=e,this.themeArray=t,this.createItemArray()}setThemeArray(){if(this.theme)this.theme==="flags"&&(this.themeArray=["Sweden","Japan","Italy","New Zealand","Kenya","China","Brazil","United Kingdom"]),this.theme==="animals"&&(this.themeArray=["Bear","Crocodile","Elefant","Giraff","Gorilla","Tiger","Whale","Zebra"]),this.theme==="colors"&&(this.themeArray=["Black","Blue","Green","Pink","Purple","Red","Turquoise","Yellow"]),this.theme==="professions"&&(this.themeArray=["Actor","Chef","Developer","Doctor","Fireman","Pilot","Police","Teacher"]),this.theme==="movies"&&(this.themeArray=["Alive","Casablanca","Leon","Lord of the rings","Matrix","Pulp fiction","The shawshank redemption","Titanic"]);else throw new Error("There is no theme set for the game");this.createItemArray()}createItemArray(){if(this.themeArray)for(let e=0;e<this.themeArray.length;e++){const t=`../img/${this.theme}/${this.themeArray[e]}.jpg`,r=new l(e+1,this.themeArray[e],t);this.itemArray.push(r)}else throw Error("There is no themeArray set for the game")}}class p{constructor(e,t){o(this,"numberOfItems",0);o(this,"computerRow",[]);o(this,"themeArray",[]);this.setNumberOfItems(e),this.setThemeArray(t),this.generateComputerRow()}getNumberOfItems(){if(!this.numberOfItems)throw new Error("Number of items has not been set for the game");return this.numberOfItems}setNumberOfItems(e){if(e<1||e>8)throw new Error("Pls provide a number between 2 - 8");this.numberOfItems=e}setThemeArray(e){const t=new c(e);this.themeArray=t.getThemeArray()}getComputerRow(){if(this.computerRow===void 0)throw new Error("No computer row has been set for the game");return this.computerRow}generateComputerRow(){try{const e=this.numberOfItems;for(let t=0;t<e;t++){const r=Math.floor(Math.random()*this.themeArray.length),s=this.themeArray[r];this.computerRow.push(s)}}catch(e){e instanceof Error&&console.log(e)}}}class f{constructor(e,t){o(this,"computerRow",[]);o(this,"numberOfGuesses",0);this.createComputerRow(e,t)}createComputerRow(e,t){const r=new p(e,t);this.computerRow=r.getComputerRow()}getNumberOfGuesses(){return this.numberOfGuesses}getFeedBackFromComputer(e){if(e.length!==this.computerRow.length)throw new Error(`The guess must contain ${this.computerRow.length} items.`);const t=this.addColorsToItems(e);return this.updateNumberOfGuesses(),t}addColorsToItems(e){for(let t=0;t<e.length;t++)e[t].getName()===this.computerRow[t]?e[t].setColor("green"):this.computerRow.includes(e[t].getName())?e[t].setColor("yellow"):e[t].setColor("red");return e}updateNumberOfGuesses(){this.numberOfGuesses++}}class w{constructor(){o(this,"textMessage");o(this,"userMessageElement");o(this,"resultText");o(this,"numberOfGuessesElement");this.textMessage=document.getElementById("text-message"),this.userMessageElement=document.getElementById("user-message-element"),this.resultText=document.getElementById("result-element"),this.numberOfGuessesElement=document.getElementById("number-of-guesses")}getUsername(){return new Promise(e=>{const t=document.createElement("input"),r=document.createElement("button");r.textContent="Submit",this.textMessage.textContent="Welcome! Enter your username and click on submit to begin!",this.userMessageElement.appendChild(t),this.userMessageElement.appendChild(r),r.addEventListener("click",()=>{try{const s=t.value,n=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","x","y","z","å","ä","ö"];for(let a=0;a<s.length;a++)if(!n.includes(s[a].toLowerCase()))throw new Error("Only letters are allowed");if(s.length>20||s.length<2)throw new Error("Pls enter a username with 2 - 20 letters");this.textMessage.textContent="",t.style.display="none",r.style.display="none",e(s)}catch(s){s instanceof Error&&this.showMessage(s.message)}})})}getChoosenTheme(e){return new Promise(t=>{this.textMessage.textContent="Choose a theme for the game!";let r=[];for(let s=0;s<e.length;s++){const n=document.createElement("button");n.textContent=`${e[s]}`,r.push(n),this.userMessageElement.appendChild(n),n.addEventListener("click",a=>{const m=n.textContent;for(let h=0;h<r.length;h++)r[h].remove();m&&t(m)})}})}getNumberOfItems(){return new Promise(e=>{this.textMessage.textContent="How many bricks would you like to play with? Choose a number between 2 and 8.";const t=document.createElement("input");this.userMessageElement.appendChild(t);const r=document.createElement("button");r.textContent="start game",this.userMessageElement.appendChild(r),r.addEventListener("click",s=>{try{if(t.value.length>1)throw new Error("Pls enter a number between 2 - 8");const n=parseInt(t.value);if(n>1&&n<9)r.style.display="none",t.style.display="none",this.textMessage.textContent="",e(n);else throw new Error("Pls enter a number between 2 - 8")}catch(n){n instanceof Error&&this.showMessage(n.message)}})})}showUserInstructions(e){this.textMessage.textContent=`Guess which ${e} items that should be in the computer row by dropping the pictures in the above row and click on check answer!`}showMessage(e){this.resultText.textContent=e}showNumberOfGuesses(e,t){this.numberOfGuessesElement.textContent=`Player ${t} has guessed 
${e==null?void 0:e.toString()} times.`}}class y{constructor(){o(this,"themeDescription","");o(this,"themeObject");o(this,"gameBoard");o(this,"answerButton");o(this,"numberOfItems");o(this,"gameUi");o(this,"username");o(this,"computer");this.gameUi=new w,this.themeObject=new c,this.answerButton=document.getElementById("answer-button"),this.start()}async start(){this.username=await this.gameUi.getUsername();const e=this.themeObject.getAvailableThemes();this.themeDescription=await this.gameUi.getChoosenTheme(e),this.numberOfItems=await this.gameUi.getNumberOfItems(),this.createGame()}createGame(){if(this.numberOfItems&&this.themeDescription)try{this.themeObject.setTheme(this.themeDescription),this.computer=new f(this.numberOfItems,this.themeDescription),this.gameBoard=new g(this.numberOfItems,this.themeObject),this.gameUi.showUserInstructions(this.numberOfItems),this.addAnswerButton()}catch(e){e instanceof Error&&this.gameUi.showMessage(e.message)}}addAnswerButton(){this.answerButton.textContent="check answer",this.answerButton.style.display="block",this.answerButton.addEventListener("click",e=>{this.checkResultWithComputer()})}async checkResultWithComputer(){try{const e=this.gameBoard.getPlayerAnswer(),t=this.computer.getFeedBackFromComputer(e);this.showResultToUser(t)}catch(e){e instanceof Error&&this.gameUi.showMessage(e.message)}}showResultToUser(e){let t=0;for(let s=0;s<e.length;s++){const n=s,a=e[s].getColor();a==="green"&&t++,this.gameBoard.updateBorderColors(n,a)}let r="";t===this.numberOfItems?r="Congratulations! You made it!":r="Wrong answer! Take a look at the frame colors and try again! Green = Correct, Yellow = Wrong place, Red = Not in row",this.gameUi.showMessage(r),this.updateNumberOfGuesses()}updateNumberOfGuesses(){var t;const e=(t=this.computer)==null?void 0:t.getNumberOfGuesses();this.gameUi.showNumberOfGuesses(e,this.username)}}new y;
